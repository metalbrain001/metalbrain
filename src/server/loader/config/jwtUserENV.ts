import { strict as assert } from 'assert';
import dotenv from 'dotenv';
import { load } from 'ts-dotenv';

// Load the .env file
dotenv.config();

// Load jwt environment variables
const jwtSchema = load({
  JWT_USER_SECRET: String,
  JWT_REFRESH_USER_SECRET: String,
  JWT_REFRESH_USER_EXPIRES_IN: String,
  JWT_REFRESH_USER_MAX_AGES: Number,
  JWT_EXPIRES_IN: String,
  JWT_USER_MAX_AGE: Number,
  JWT_COOKIE_EXPIRES_IN: String,
  JWT_COOKIE_SECURE: Boolean,
  JWT_HTTP_ONLY: Boolean,
  JWT_COOKIE_HTTP_ONLY: Boolean,
  JWT_SAME_SITE: String,
  JWT_USER_COOKIE_NAME: String,
  JWT_ISSUER: String,
  JWT_ALGORITHM: String,
});

const {
  JWT_USER_SECRET,
  JWT_REFRESH_USER_SECRET,
  JWT_REFRESH_USER_EXPIRES_IN,
  JWT_REFRESH_USER_MAX_AGES,
  JWT_EXPIRES_IN,
  JWT_USER_MAX_AGE,
  JWT_COOKIE_EXPIRES_IN,
  JWT_COOKIE_SECURE,
  JWT_COOKIE_HTTP_ONLY,
  JWT_SAME_SITE,
  JWT_HTTP_ONLY,
  JWT_USER_COOKIE_NAME,
  JWT_ISSUER,
  JWT_ALGORITHM,
} = jwtSchema;

assert(JWT_USER_SECRET, 'JWT_SECRET is required');
assert(JWT_REFRESH_USER_SECRET, 'JWT  REFRESH SECRET is required');
assert(JWT_REFRESH_USER_EXPIRES_IN, 'JWT_REFRESH_EXPIRES_IN is required');
assert(JWT_REFRESH_USER_MAX_AGES, 'JWT_REFRESH_USER_MAX_AGES is required');
assert(JWT_EXPIRES_IN, 'JWT_EXPIRES_IN is required');
assert(JWT_USER_MAX_AGE, 'JWT_USER_MAX_AGES is required');
assert(JWT_COOKIE_EXPIRES_IN, 'JWT_COOKIE_EXPIRES_IN is required');
assert(JWT_COOKIE_SECURE, 'JWT_COOKIE_SECURE is required');
assert(JWT_COOKIE_HTTP_ONLY, 'JWT_COOKIE_HTTP_ONLY is required');
assert(JWT_SAME_SITE, 'JWT_SAME_SITE is required');
assert(JWT_USER_COOKIE_NAME, 'JWT_USER_COOKIE_NAME is required');
assert(JWT_ISSUER, 'JWT_ISSUER is required');
assert(JWT_HTTP_ONLY, 'JWT_HTTP_ONLY is required');
assert(JWT_ALGORITHM, 'JWT_ALGORITHM  is required');

export const jwtENV = {
  JWT_USER_SECRET,
  JWT_REFRESH_USER_SECRET,
  JWT_REFRESH_USER_EXPIRES_IN,
  JWT_REFRESH_USER_MAX_AGES,
  JWT_EXPIRES_IN,
  JWT_USER_MAX_AGE,
  JWT_COOKIE_EXPIRES_IN,
  JWT_COOKIE_SECURE,
  JWT_COOKIE_HTTP_ONLY,
  JWT_SAME_SITE,
  JWT_USER_COOKIE_NAME,
  JWT_ISSUER,
  JWT_HTTP_ONLY,
  JWT_ALGORITHM,
};

export default {
  jwtENV,
  JWT_USER_SECRET,
  JWT_REFRESH_USER_SECRET,
  JWT_REFRESH_USER_EXPIRES_IN,
  JWT_REFRESH_USER_MAX_AGES,
  JWT_EXPIRES_IN,
  JWT_USER_MAX_AGE,
  JWT_COOKIE_EXPIRES_IN,
  JWT_COOKIE_SECURE,
  JWT_COOKIE_HTTP_ONLY,
  JWT_SAME_SITE,
  JWT_USER_COOKIE_NAME,
  JWT_ISSUER,
  JWT_HTTP_ONLY,
  JWT_ALGORITHM,
};
